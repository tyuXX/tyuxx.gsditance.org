name: Dump Submodule Locations and Information

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Run daily to update descriptions

jobs:
  dump-submodule-info:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the main repository, including submodules
      - name: Check out repository with submodules
        uses: actions/checkout@main
        with:
          submodules: recursive
          fetch-depth: 0

      # Step 2: Generate JSON file with submodule information
      - name: Generate submodule information JSON
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Initialize an empty JSON array
          submodules_json="[]"
          
          # Get the owner/organization name from the repository URL
          owner=$(git config --get remote.origin.url | sed -n 's/.*github.com[:\/]\([^\/]*\)\/.*/\1/p')
          
          # Loop through each submodule
          while IFS= read -r line; do
            # Get submodule path and URL
            path=$(echo "$line" | awk '{print $2}')
            url=$(git config --file .gitmodules --get "submodule.$path.url")
            
            # Extract repo name from URL
            repo=$(basename "$url" .git)
            
            # Change to submodule directory
            cd "$path"
            
            # Get last commit info
            last_commit_hash=$(git rev-parse HEAD)
            last_commit_message=$(git log -1 --pretty=%B)
            last_commit_date=$(git log -1 --format=%cd --date=iso)
            last_updated=$(git log -1 --format=%cd --date=iso)
            
            # Return to root directory
            cd - > /dev/null
            
            # Fetch repository description using GitHub API
            repo_info=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/$owner/$repo")
            
            description=$(echo "$repo_info" | jq -r '.description // "No description available"')
            
            # Add to JSON array
            submodules_json=$(echo $submodules_json | jq ". + [{
              \"name\": \"$path\",
              \"description\": \"$description\",
              \"lastCommit\": {
                \"hash\": \"$last_commit_hash\",
                \"message\": \"$(echo "$last_commit_message" | sed 's/"/\\"/g')\",
                \"date\": \"$last_commit_date\"
              },
              \"lastUpdated\": \"$last_updated\"
            }]")
          done < <(git config --file .gitmodules --get-regexp path)
          
          # Output the generated JSON
          echo "$submodules_json" > submodules.json

      # Step 3: Commit and push submodules.json
      - name: Commit and push submodules.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add submodules.json
          git commit -m "Update submodule information in submodules.json" || echo "No changes to commit"
          git push origin main
